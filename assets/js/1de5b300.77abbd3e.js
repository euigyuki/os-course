"use strict";(self.webpackChunkos_course=self.webpackChunkos_course||[]).push([[903],{1106:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"javadebugger","title":"\ud83d\udee0\ufe0f Debugging Java in VSCode","description":"Debugging is more than just fixing errors \u2014 it\'s about understanding what your code is doing and why. Here\u2019s how to debug Java programs using Visual Studio Code, step by step.","source":"@site/docs/javadebugger.md","sourceDirName":".","slug":"/javadebugger","permalink":"/os-course/docs/javadebugger","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Frequently Asked Questions","permalink":"/os-course/docs/faq"},"next":{"title":"Coding Philosophy","permalink":"/os-course/docs/coding-philosophy"}}');var r=s(4848),o=s(8453);const i={},a="\ud83d\udee0\ufe0f Debugging Java in VSCode",d={},l=[{value:"\u2699\ufe0f 1. Setup VSCode for Java",id:"\ufe0f-1-setup-vscode-for-java",level:2},{value:"\ud83d\udc1e 2. Add Breakpoints",id:"-2-add-breakpoints",level:2}];function u(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\ufe0f-debugging-java-in-vscode",children:"\ud83d\udee0\ufe0f Debugging Java in VSCode"})}),"\n",(0,r.jsxs)(n.p,{children:["Debugging is more than just fixing errors \u2014 it's about understanding what your code is doing and ",(0,r.jsx)(n.em,{children:"why"}),". Here\u2019s how to debug Java programs using ",(0,r.jsx)(n.strong,{children:"Visual Studio Code"}),", step by step."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-1-setup-vscode-for-java",children:"\u2699\ufe0f 1. Setup VSCode for Java"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Install the ",(0,r.jsx)(n.strong,{children:"Java Extension Pack"})," from the VSCode Marketplace."]}),"\n",(0,r.jsxs)(n.li,{children:["Make sure you have a JDK installed (",(0,r.jsx)(n.code,{children:"java -version"})," in your terminal)."]}),"\n",(0,r.jsxs)(n.li,{children:["Open your project folder in VSCode (your ",(0,r.jsx)(n.code,{children:".java"})," files should be in ",(0,r.jsx)(n.code,{children:"src/"})," or similar)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-2-add-breakpoints",children:"\ud83d\udc1e 2. Add Breakpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click in the ",(0,r.jsx)(n.strong,{children:"gutter"})," (left of the line number) where you want execution to pause."]}),"\n",(0,r.jsx)(n.li,{children:"Breakpoints show up as red circles."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'for (int i = 0; i < 5; i++) {\n    System.out.println(i); // \u2190 set a breakpoint here\n}\n\u25b6\ufe0f 3. Start Debugging\n\nPress F5 or go to Run > Start Debugging.\nIf prompted, click \u201cJava\u201d as the debugger.\nVSCode will automatically detect the main class and compile your code.\n\ud83e\udded 4. Use the Debugger Panel\n\nOnce debugging starts, use:\n\n\u25b6\ufe0f Continue \u2014 resume running until the next breakpoint\n\u23ed Step Over \u2014 go to the next line (skip function internals)\n\u23ec Step Into \u2014 step inside a function call\n\u23f9 Stop \u2014 end the session\nAlso check:\n\nVariables: watch local/global variables\nCall Stack: trace how the program reached this point\nWatch Expressions: add any variable or expression manually\n\ud83d\udd0d 5. Debugging Tips\n\n\ud83e\uddea Add Logs While Debugging\nUse System.out.println() to quickly trace values and logic flow.\n\nSystem.out.println("Reached checkpoint A, buffer size = " + buffer.size());\n\ud83e\uddf5 Debugging Threads\nIf your project involves multithreading:\n\nAdd breakpoints inside run() methods\nWatch shared variables like buffers or flags\nUse breakpoints to pause competing threads\n\ud83d\udca1 Pro Tip: Watch Expressions\n\nUse the Watch panel to track variables, like:\n\nreadyQueue.size()\ncurrentProcess.getPriority()\n\ud83e\udde0 Final Thought\n\n\u201cDon\u2019t just stare at your code \u2014 step through it.\u201d\nUsing the debugger saves time and teaches you how the Java Virtual Machine really runs your code.\n\n'})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);